import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

train=pd.read_csv("D:\\Walmart\\train.csv")
features=pd.read_csv("D:\\Walmart\\features.csv")
stores=pd.read_csv("D:\\Walmart\\stores.csv")
test=pd.read_csv("D:\\Walmart\\test.csv")
df=pd.merge(train,features,on=['Store' ,'Date'],how='left')
---------------------------------------------------------------------------
df['Store'].max(),df['Dept'].max(),df['Date'].max(),df['Date'].min()
df.head(1)

---------------------------------------------------------------------------
df['Weekly_Sales'] = np.where(df.Weekly_Sales <0, 0, df.Weekly_Sales)
df['MarkDown1']=df['MarkDown1'].fillna(0)
df['MarkDown2']=df['MarkDown2'].fillna(0)
df['MarkDown3']=df['MarkDown3'].fillna(0)
df['MarkDown4']=df['MarkDown4'].fillna(0)
df['MarkDown5']=df['MarkDown5'].fillna(0)
df['IsHoliday_x']=pd.get_dummies(df['IsHoliday_x'])
df=df.drop("IsHoliday_y",axis=1)
df.rename(columns={'IsHoliday_x':'IsHoliday'},inplace=True)
df.set_index("Date",inplace=True)
df.head(1)
--------------------------------------------------------------------------
f=df.groupby(['Store'])['Dept'].nunique().reset_index().rename({"Dept":"UniqueDepts"})
#np.dot(df['Store'],df['Dept'])
print("total models to be built for",sum(f['Dept']),"Depts")
print("there are around",df.shape[1],"variables")
print("We want ",sum(f['Dept'])*df.shape[1],"1 variable models")
print("We want ",sum(f['Dept'])*df.shape[1]*(df.shape[1]-1),"2 variable models")
print("We want ",sum(f['Dept'])*df.shape[1]*(df.shape[1]-1)*(df.shape[1]-2),"3 variable models")
print("We want ",sum(f['Dept'])*df.shape[1]*(df.shape[1]-1)*(df.shape[1]-2)*(df.shape[1]-3),"4 variable models")
print("count of depts in each store..")
f
--------------------------------------------------------------------------
#The below analysis shows that not the dept has sales accross the weeks for 2.6 years.
#So there needs to be some sort of adjustment in the data before you fit in forecasting models for each department
cmb=[]
count=0
for ii in range(1,df['Store'].max()+1):
    for jj in range(1,df['Dept'].max()+1):
        m=df[(df['Store']==ii)&(df['Dept']==jj)]['Weekly_Sales'].min()
        n=df[(df['Store']==ii)&(df['Dept']==jj)]['Weekly_Sales'].max()
        c=df[(df['Store']==ii)&(df['Dept']==jj)]['Weekly_Sales'].count()
        h=pd.DataFrame(np.where(df[(df['Store']==ii)&(df['Dept']==jj)]['IsHoliday']==0)).shape[1]
        count+=1
        print(count,'Store',ii,'Dept',jj,'min_sales',m,'max_sales',n,'#ofweekssales',c,'#ofholidays',h)
        cmb.append({'count':count,'Store':ii,'Dept':jj,'min_sales':m,'max_sales':n,'#ofweekssales':c})
        
result=pd.DataFrame(cmb)         

---------------------------------------------------------------------------

import itertools
import statsmodels.api as sm

count=0
models=[]
#max_pvalue=[]
k=2

for ii in range(1,df['Store'].max()+1):
    for jj in range(1,df['Dept'].max()+1):
        
        y=df[(df['Store']==ii)&(df['Dept']==jj)]['Weekly_Sales']
        X=df[(df['Store']==ii)&(df['Dept']==jj)].drop(['Store','Dept','Weekly_Sales'],axis=1)
        #ols = sm.OLS(y,X).fit()
        #models.append(ols)
        
        for combo in itertools.combinations(X.columns, k):
            try:
                ols = sm.OLS(y,X[list(combo)]).fit()
                maxpval= round(max(ols.pvalues.values),2)
                #max_pvalue.append(pval)            
                #RSS = ((regr.predict(Xn[list(combo)]) - yn) ** 2).sum()
                #print(count,'Store',ii,'Dept',jj)
                models.append({"Store":ii,"Dept":jj,"model#":count,"modelsummary":ols,"maxpval":maxpval})
                
            except:
                continue
        count+=1
                
results=pd.DataFrame(models)        

---------------------------------------------------------------------------------------------------------

results
---------------------------------------------------------------------------------------------------------

#simple fixed models for all depts
import itertools
import statsmodels.api as sm

count=0
models=[]
#max_pvalue=[]
k=2

for ii in range(1,df['Store'].max()):
    for jj in range(1,df['Dept'].max()):
        try:
            y=df[(df['Store']==ii)&(df['Dept']==jj)]['Weekly_Sales']
            X=df[(df['Store']==ii)&(df['Dept']==jj)].drop(['Store','Dept','Weekly_Sales'],axis=1)
            ols = sm.OLS(y,X).fit()
            models.append(ols)
            #print(count,'Store',ii,'Dept',jj,'min_sales',m,'max_sales',n,'#ofweekssales',c,'#ofholidays',h)
        except:
            continue
results=pd.DataFrame(models)        
------------------------------------------------------------------------------------------------------------
results
